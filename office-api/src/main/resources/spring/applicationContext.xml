<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd


		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"

       default-lazy-init="true">

    <description>Spring公共配置</description>

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan
        base-package="com.reyun.*.*.service, com.reyun.exception"/>

    <context:property-placeholder location="classpath:persistence.properties"/>

    <bean id="parentDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${dataSource.driverClassName}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
    </bean>

    <bean id="dataSource" parent="parentDataSource">
        <property name="url" value="${default.dataSource.url}"/>
        <property name="username" value="${default.dataSource.username}"/>
        <property name="password" value="${default.dataSource.password}"/>
    </bean>

    <bean id="adiDataSource" parent="parentDataSource">
        <property name="url" value="${adi.dataSource.url}"/>
        <property name="username" value="${adi.dataSource.username}"/>
        <property name="password" value="${adi.dataSource.password}"/>
    </bean>



    <bean id="adiManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="adiDataSource"/>
        <property name="packagesToScan" value="com.reyun.adi.*.model"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.physical_naming_strategy">com.reyun.framework.strategy.ImprovedNamingStrategy
                </prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop><!-- none -->
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
            </props>
        </property>
    </bean>


    <!--指定实现JPA的适配器 -->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
    </bean>


    <bean id="adiTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="adiManagerFactory"/>
    </bean>



    <jpa:repositories base-package="com.reyun.adi.*.repository" repository-impl-postfix="Impl"
                      transaction-manager-ref="adiTransactionManager"
                      entity-manager-factory-ref="adiManagerFactory"/>
    <tx:annotation-driven transaction-manager="adiTransactionManager" proxy-target-class="true"/>

    <tx:advice id="adiTxAdvice" transaction-manager="adiTransactionManager">
        <tx:attributes>
            <tx:method name="report*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="list*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config expose-proxy="true">
        <aop:pointcut id="adiTxPointcut" expression="execution(* com.reyun.adi.*.*(..))"/>
        <aop:advisor advice-ref="adiTxAdvice" pointcut-ref="adiTxPointcut"/>
    </aop:config>

</beans>
